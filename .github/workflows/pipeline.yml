name: CI Pipeline

on:
  push:
    branches: 
      - "**"

jobs:
  get-version:
    name: "Get Version"
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get next semantic tag
        id: semantic-version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: '.*'
          dry_run: true
      - name: Get pre-release version
        run: |
          increment=$(git rev-list  $(git rev-list --tags --no-walk --max-count=1)..HEAD --count)
          VERSION=${{ steps.semantic-version.outputs.new_version }}-${increment}.${GITHUB_SHA:0:7}
          echo "VERSION=$VERSION" > version.txt
          echo PREVIOUS_RELEASE_TAG=${{ steps.semantic-version.outputs.previous_tag }} >> version.txt
          echo VERSION: $VERSION
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: version.txt
          retention-days: 5

  helm-lint:
    name: helm-lint
    needs: get-version
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.6.3'
      - name: Lint and template
        run: |
          echo " Helm Lint" 
  
  es-lint:
    name: es-lint
    needs: get-version
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
      - name: Run ES lint
        run: |
          echo "npm run eslint"

  npm-build:
    name: npm-build
    needs: get-version
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
      - name: Download version.txt
        uses: actions/download-artifact@v2
        with: 
          name: version
      - name: Build npm package
        run: |
          source version.txt
          echo NODE_ENV=production npm run build

  npm-unittest:
    name: npm-unittest
    needs: get-version
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
      - name: Run tests
        run: |          
          echo CI=true npm run test
 
  helm-package-publish:
    name: helm-package-publish
    needs: helm-lint
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.6.3'
      - name: Download version.txt
        uses: actions/download-artifact@v2
        with:
          name: version
      - name: Package and publish helm chart
        run: |
          source version.txt
          echo Package -> Publish

  docker-package-publish:
    name: docker-package-publish
    needs: npm-build
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download version.txt
        uses: actions/download-artifact@v2
        with:
          name: version
      - name: Download npm package
        uses: actions/download-artifact@v2
        with:
          name: npm-package
          path: app/output
      - name: Build and publish docker image
        run: |
          source version.txt
          echo docker build -> docker push

  deploy-dev:
    name: Deploy DEV
    needs: [helm-package-publish, docker-package-publish]
    runs-on: self-hosted
    environment: 
      name: CD4-DEV
      url: 'https://mix-dev.cd4.crt.nuance.com/v3/'
    steps:
      - name: Download version.txt
        uses: actions/download-artifact@v2
        with:
          name: version
      - name: Trigger harness workflow
        run: |
          cat version.txt
          echo curl harness url

  deploy-qa:
    name: Deploy QA
    needs: [helm-package-publish, docker-package-publish]
    runs-on: self-hosted
    environment: 
      name: CD4-QA
      url: 'https://mix-qa.cd4.crt.nuance.com/v3/'
    steps:
      - name: Download version.txt
        uses: actions/download-artifact@v2
        with:
          name: version
      - name: Trigger harness workflow
        run: |
          cat version.txt
          echo curl harness url

  create-release:
    name: Create release
    needs: deploy
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main'
    environment: 
      name: Release
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download version.txt
        uses: actions/download-artifact@v2
        with: 
          name: version
      - name: Create and push release tag
        id: release_tag
        uses: mathieudutour/github-tag-action@v5.6
        with:
          create_annotated_tag: true
          tag_prefix: ""
          release_branches: 'main'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.release_tag.outputs.new_tag }}
          release_name: Release ${{ steps.release_tag.outputs.new_tag }}
          body: ${{steps.release_tag.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Save release version tag
        run: |
          echo RELEASE_VERSION=${{ steps.release_tag.outputs.new_tag }} >> version.txt
          echo RELEASE_VERSION: ${{ steps.release_tag.outputs.new_tag }}
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: version.txt
          retention-days: 5

  retag-and-publish-artifacts:
    name: Retag and Publish artifacts
    needs: create-release
    runs-on: self-hosted
    steps:
      - name: Download version.txt
        uses: actions/download-artifact@v2
        with: 
          name: version
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker image 
        run: |
          source version.txt
          cat version.txt
          echo "Pull -> Retag -> Push "
          docker version
      - name: Setup helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.6.3'
      - name: Helm chart
        run: |
          source version.txt
          cat version.txt
          echo "Download -> extract -> Package > Push"
          helm version

  deploy-prod-pipeline:
    name: Deploy prod Pipeline
    needs: retag-and-publish-artifacts
    runs-on: self-hosted
    environment:
      name: PROD
    steps:
      - name: Download version.txt
        uses: actions/download-artifact@v2
        with: 
          name: version
      - name: Trigger harness pipeline
        run: |
          echo "Trigger harness pipeline: STAGE > PROD"


  
