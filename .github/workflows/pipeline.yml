name: CI Pipeline

on:
  push:
    branches: 
      - "**"
  pull_request: 
    branches: [ main ]

jobs:
  get-version:
    name: "Get Version"
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get next semantic tag
        id: semantic-version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: '.*'
          dry_run: true
      - name: Get pre-release version
        run: |
          increment=$(git rev-list  $(git rev-list --tags --no-walk --max-count=1)..HEAD --count)
          VERSION=${{ steps.semantic-version.outputs.new_version }}-${increment}.${GITHUB_SHA:0:7}
          echo "VERSION=$VERSION" > version.txt
          echo RELEASE_VERSION=${{ steps.semantic-version.outputs.new_version }} >> version.txt
          echo PREVIOUS_RELEASE_TAG=${{ steps.semantic-version.outputs.previous_tag }} >> version.txt
          echo VERSION: $VERSION
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: version.txt
          retention-days: 5

  create-release:
    name: Create release
    needs: get-version
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main'
    environment: 
      name: Release
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download version.txt
        uses: actions/download-artifact@v2
        with: 
          name: version
      - name: Create and push release tag
        id: release_tag
        uses: mathieudutour/github-tag-action@v5.6
        with:
          create_annotated_tag: true
          tag_prefix: ""
          release_branches: 'main'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate changelogs
        id: release_changelog
        uses: mikepenz/release-changelog-builder-action@v2
        with:
          fromTag: ${{ steps.release_tag.outputs.previous_tag }}
          toTag: ${{ steps.release_tag.outputs.new_tag }}
          commitMode: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.release_tag.outputs.new_tag }}
          release_name: Release ${{ steps.release_tag.outputs.new_tag }}
          body: ${{steps.release_changelog.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Save release version tag
        run: |
          echo RELEASE_VERSION=${{ steps.release_tag.outputs.new_tag }} >> version.txt
          echo RELEASE_VERSION: ${{ steps.release_tag.outputs.new_tag }}
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: version.txt
          retention-days: 5
  